import { useState } from "react";
import Head from "next/head";
import formImage from "../public/img3.png";
import Image from "next/image";
import { useFormik } from "formik";
import * as Yup from "yup";
import { useRouter } from "next/router";
import { motion as m } from "framer-motion";

export default function Home() {
  const router = useRouter();
  const [selectedFile, setSelectedFile] = useState(null);

  const formik = useFormik({
    initialValues: {
      name: "",
      email: "",
      Domain: "",
      rating: "",
      feedback: "",
      files: [],
      terms: false,
    },

    validationSchema: Yup.object({
      name: Yup.string().required("Name is required"),
      email: Yup.string().email("Invalid email address").required("Email is required"),
      Domain: Yup.string().required("Domain is required"),
      rating: Yup.number().required("Rating is required"),
      feedback: Yup.string().required("Feedback is required"),
      files: Yup.mixed().required("Files are required"),
      terms: Yup.boolean().oneOf([true], "Please agree to the terms"),
    }),

    onSubmit: (values) => {
      console.log("form submitted");
      console.log(values);
      router.push({ pathname: "/success", query: values });
    },
  });

  const handleFileChange = (event) => {
    setSelectedFile(event.target.files);
    formik.setFieldValue("files", event.target.files);
  };

  return (
    <m.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="absolute w-full"
    >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="h-screen items-center flex justify-center">
        <form
          onSubmit={formik.handleSubmit}
          className="bg-white flex rounded-lg w-1/2 font-latoRegular"
        >
          <div className="flex-1 text-gray-700 p-20">
            <h1 className="text-3xl pb-2 font-latoBold">
              Feedback Form ðŸ˜Š
            </h1>
            <div className="mt-6">
              {/* Name */}
              <div className="pb-4">
                <label htmlFor="name" className="block font-latoBold text-sm pb-2">
                  Name
                </label>
                <input
                  className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                  type="text"
                  name="name"
                  placeholder="Enter your name"
                  onChange={formik.handleChange}
                  value={formik.values.name}
                />
                {formik.touched.name && formik.errors.name && (
                  <p className="text-sm text-red-500">{formik.errors.name}</p>
                )}
              </div>

              {/* Email */}
              <div className="pb-4">
                <label htmlFor="email" className="block font-latoBold text-sm pb-2">
                  Email
                </label>
                <input
                  className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                  type="email"
                  name="email"
                  placeholder="Enter your email address"
                  onChange={formik.handleChange}
                  value={formik.values.email}
                />
                {formik.touched.email && formik.errors.email && (
                  <p className="text-sm text-red-500">{formik.errors.email}</p>
                )}
              </div>

              {/* Domain */}
              <div className="pb-4">
                <label htmlFor="Domain" className="block font-latoBold text-sm pb-2">
                  Domain
                </label>
                <select
                  className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                  name="Domain"
                  onChange={formik.handleChange}
                  value={formik.values.Domain}
                >
                  <option value="Software Development">Software Development</option>
                  <option value="Full Stack Development">Full Stack Development</option>
                  <option value="Mobile Application Development">Mobile Application Development</option>
                  <option value="Salesforce Development">Salesforce Development</option>
                </select>
                {formik.touched.Domain && formik.errors.Domain && (
                  <p className="text-sm text-red-500">{formik.errors.Domain}</p>
                )}
              </div>

              {/* Rating */}
              <div className="pb-4">
                <label htmlFor="rating" className="block font-latoBold text-sm pb-2">
                  Rating
                </label>
                <input
                  type="number"
                  min="1"
                  max="5"
                  className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                  name="rating"
                  placeholder="Enter your rating (1-5)"
                  onChange={formik.handleChange}
                  value={formik.values.rating}
                />
                {formik.touched.rating && formik.errors.rating && (
                  <p className="text-sm text-red-500">{formik.errors.rating}</p>
                )}
              </div>

              {/* Your Feedback */}
              <div className="pb-4">
                <label htmlFor="feedback" className="block font-latoBold text-sm pb-2">
                  Your Feedback
                </label>
                <textarea
                  className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                  name="feedback"
                  placeholder="Enter your feedback"
                  onChange={formik.handleChange}
                  value={formik.values.feedback}
                />
                {formik.touched.feedback && formik.errors.feedback && (
                  <p className="text-sm text-red-500">{formik.errors.feedback}</p>
                )}
              </div>

              {/* Select Files */}
              {/* Select Files */}
              <div className="pb-4">
                <label htmlFor="files" className="block font-latoBold text-sm pb-2">
                  Select Files
                </label>
                <div className="relative border border-gray-500 rounded-md p-2">
                  <input
                    type="file"
                    id="files"
                    name="files"
                    onChange={handleFileChange}
                    className="absolute inset-0 w-full h-full opacity-0 cursor-pointer"
                    multiple
                  />
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-2">
                      <div className="h-6 w-6 text-gray-500">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth="2"
                            d="M12 6v6m0 0v6m0-6h6m-6 0H6"
                          />
                        </svg>
                      </div>
                      <span className="text-gray-500">Choose files</span>
                    </div>
                    {selectedFile && (
                      <span className="text-gray-500">
                        {selectedFile.length} file(s) selected
                      </span>
                    )}
                  </div>
                </div>
                {formik.touched.files && formik.errors.files && (
                  <p className="text-sm text-red-500">{formik.errors.files}</p>
                )}
              </div>



              {/* Terms */}
              <div className="pb-4">
                <label htmlFor="terms" className="flex items-center">
                  <input
                    type="checkbox"
                    name="terms"
                    checked={formik.values.terms}
                    onChange={formik.handleChange}
                    className="h-5 w-5 text-teal-500 border-2 background-gray-500 focus:border-teal-500 focus:ring-teal-500"
                  />
                  <span className="ml-2 font-latoBold text-sm text-gray-500">
                    I agree to the Feedback Terms and Conditions
                  </span>
                </label>
                {formik.touched.terms && formik.errors.terms && (
                  <p className="text-sm text-red-500">{formik.errors.terms}</p>
                )}
              </div>

              {/* Submit Button */}
              <button
              type="submit"
              className="bg-teal-500 font-latoBold text-sm text-white py-3 mt-6 rounded-lg w-full"
            >
              Submit
            </button>
            
            </div>
          </div>
          <div className="relative flex-1">
  <div className="w-full h-full rounded-lg overflow-hidden">
    <Image
      className="object-cover w-full h-full"
      src={formImage}
      alt="form-learn"
    />
  </div>
</div>



        </form>
      </main>
    </m.div>
  );
}
